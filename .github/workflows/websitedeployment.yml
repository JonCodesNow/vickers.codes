name: website deployment

on:
  pull_request:
    branches:
      - '*'
    types:
      - opened      
      - synchronize

jobs:
  # Step 1: Apply Terraform to create the S3 bucket only
  terraform_create_s3:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Curl AWS CLI
        run: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"

      - name: Unzip AWS CLI
        run: unzip awscliv2.zip

      - name: Install AWS CLI
        run: ./aws/install -i ~/my-aws-cli

      - name: Create AWS credentials directory
        run: mkdir -p ~/.aws

      - name: Configure AWS credentials
        run: echo -e "[default]\naws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}\naws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials

      - name: Remove S3 Bucket from Terraform State
        run: |
          cd $GITHUB_WORKSPACE/terraform
          terraform init -reconfigure
          terraform state rm aws_s3_bucket.s3_bucket
      
      - name: Apply Terraform to Recreate S3 Bucket
        run: |
          cd $GITHUB_WORKSPACE/terraform
          terraform apply -target=aws_s3_bucket.s3_bucket -auto-approve
      

  # Step 2: Sync files to the S3 bucket
  sync_site_files:
    needs: terraform_create_s3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create AWS credentials directory
        run: mkdir -p ~/.aws

      - name: Configure AWS credentials
        run: echo -e "[default]\naws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}\naws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials

      - uses: ruby/setup-ruby@v1.172.0 
        with:
          ruby-version: '3.1'

      - name: Install Bundler
        run: | 
          cd $GITHUB_WORKSPACE/online-cv
          bundle install

      - name: Generate Site files
        run: |
            cd $GITHUB_WORKSPACE/online-cv
            bundle exec jekyll build 

      - name: List Site Files
        run: ls -R online-cv/_site
    
      - name: Check AWS CLI Version
        run: aws --version
    
      - name: Sync _site files to S3 bucket
        run: aws s3 sync online-cv/_site s3://vickers.codes --region us-east-1

  # Step 3: Apply the rest of the Terraform state (CloudFront distribution, etc.)
  terraform_apply_rest:
    needs: sync_site_files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create AWS credentials directory
        run: mkdir -p ~/.aws

      - name: Configure AWS credentials
        run: echo -e "[default]\naws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}\naws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials

      - name: Initialize Terraform Backend
        run: |
          cd $GITHUB_WORKSPACE/terraform
          terraform init -reconfigure

        # Apply the rest of the Terraform state (including CloudFront)
      - name: Apply Remaining Terraform Resources
        run: |
          cd $GITHUB_WORKSPACE/terraform
          terraform apply -auto-approve
